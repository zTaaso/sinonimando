{"version":3,"sources":["assets/notFound.png","pages/Home/styles.js","components/SearchBar/styles.js","components/SearchBar/index.js","components/NotFound/styles.js","components/NotFound/index.js","pages/Home/components/SynonymsContent/styles.js","pages/Home/components/SynonymsContent/index.js","services/api.js","pages/Home/index.js","router.js","App.js","index.js"],"names":["module","exports","Container","styled","div","StatusBar","darken","SearchBar","onSearch","onWordChange","wordProp","history","useHistory","useState","word","setWord","useEffect","onSubmit","e","preventDefault","push","type","onChange","evt","target","value","placeholder","size","color","Content","NotFound","randomNumber","Math","floor","random","src","emoji","alt","width","height","frameBorder","allowFullScreen","title","SynonymItem","li","Loading","SynonymsContent","synonyms","loading","didFind","name","fadeIn","map","synonymItem","key","sort","synonym","className","isMultiple","onClick","formatedWord","replace","handleSynonymClick","api","axios","create","baseURL","method","Home","match","notFound","routeWord","params","setSynonyms","setDidFind","setLoading","getSynonyms","useCallback","a","q","trim","data","Object","entries","index","arr","length","concat","includes","Routes","path","exact","component","render","props","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.956abc64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notFound.5325f9a1.png\";","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  min-height: 100%;\r\n  background: radial-gradient(#5c2a9d, #45046a);\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 5px 0 30px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const StatusBar = styled.div`\r\n  background: #45046a;\r\n  width: 100%;\r\n  padding: 25px 5px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h1 {\r\n    color: #b5076b;\r\n    font-family: Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',\r\n      'Helvetica Neue', sans-serif;\r\n    border-bottom: 1px solid #b5076b;\r\n  }\r\n\r\n  form {\r\n    width: 50%;\r\n    margin-top: 25px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  form input {\r\n    width: 100%;\r\n    height: 32px;\r\n    padding: 5px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: linear-gradient(#b5076b, ${darken(0.05, '#b5076b')});\r\n\r\n    color: #fff;\r\n    font-size: 18px;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n\r\n    transition: 0.3s;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      padding: 18px 15px;\r\n    }\r\n\r\n    &::placeholder {\r\n      color: #fff;\r\n      opacity: 0.4;\r\n    }\r\n  }\r\n\r\n  form button {\r\n    background: #b5076b;\r\n    border-radius: 7px;\r\n    border: none;\r\n    padding: 6px;\r\n    margin-left: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n\r\n    position: relative;\r\n    left: 0;\r\n    bottom: 0;\r\n\r\n    &:hover {\r\n      padding: 9px;\r\n      left: 3px;\r\n      bottom: 3px;\r\n      background: ${darken(0.03, '#b5076b')};\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MdSearch } from 'react-icons/md';\r\n\r\nimport { StatusBar } from './styles';\r\n\r\nfunction SearchBar({ onSearch, onWordChange, wordProp = '' }) {\r\n  const history = useHistory();\r\n  const [word, setWord] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // onSearch(word);\r\n    history.push(`/${word}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setWord(wordProp);\r\n  }, [wordProp]);\r\n\r\n  return (\r\n    <StatusBar>\r\n      <h1>Sinonimando</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(evt) => {\r\n            onWordChange(evt.target.value);\r\n            setWord(evt.target.value);\r\n          }}\r\n          value={word}\r\n          placeholder=\"Procure por um sinônimo\"\r\n        />\r\n        <button type=\"submit\">\r\n          <MdSearch size={20} color=\"#FFF\" />\r\n        </button>\r\n      </form>\r\n    </StatusBar>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 75px;\r\n\r\n  img {\r\n    width: 300px;\r\n    height: 250px;\r\n  }\r\n\r\n  h2 {\r\n    padding: 0 50px;\r\n    margin-top: 30px;\r\n    font-size: 30px;\r\n    text-align: center;\r\n    color: rgba(255, 0, 0, 0.8);\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Content } from './styles';\r\nimport emoji from '../../assets/notFound.png';\r\n\r\nfunction NotFound() {\r\n  const randomNumber = Math.floor(Math.random() * 10) + 1;\r\n\r\n  return (\r\n    <Content>\r\n      {randomNumber >= 5 ? (\r\n        <img src={emoji} alt=\"doubtful emoji\" />\r\n      ) : (\r\n        <iframe\r\n          src=\"https://giphy.com/embed/a5viI92PAF89q\"\r\n          width=\"480\"\r\n          height=\"300\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen\r\n          title=\"doubtful batman gif\"\r\n        ></iframe>\r\n      )}\r\n\r\n      <h2>\r\n        Sinônimo não encontrado. <br /> Tente novamente com uma palavra\r\n        semelhante.\r\n      </h2>\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  min-height: 100%;\r\n  width: 90%;\r\n  padding: 20px 30px 30px;\r\n  border-radius: 8px;\r\n  background: #b5076b;\r\n  margin-top: 50px;\r\n\r\n  h1 {\r\n    color: rgba(255, 255, 255, 0.7);\r\n    font-family: sans-serif;\r\n    margin: 10px 0 20px;\r\n\r\n    span {\r\n      font-weight: bold;\r\n      color: #fff;\r\n      border-bottom: 1px dotted rgba(255, 255, 255, 0.85);\r\n    }\r\n  }\r\n\r\n  > ul {\r\n    margin-top: 10px;\r\n    padding-left: 20px;\r\n    border-left: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nexport const SynonymItem = styled.li`\r\n  list-style: none;\r\n  padding-bottom: 30px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.195);\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  & + & {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  h2 {\r\n    color: #fff;\r\n    font-family: Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans',\r\n      'Helvetica Neue', sans-serif;\r\n  }\r\n\r\n  div {\r\n    margin-left: 15px;\r\n    padding: 0 20px;\r\n    display: inline-block;\r\n    max-width: 100%;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-direction: row;\r\n      max-width: 100%;\r\n      overflow-wrap: break-word;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    ul li {\r\n      margin-right: 6px;\r\n      list-style: none;\r\n      /* min-width: 80px; */\r\n\r\n      button {\r\n        background: none;\r\n        border: none;\r\n        color: rgba(255, 255, 255, 0.85);\r\n        font-size: 20px;\r\n        text-decoration: none;\r\n        border-bottom: 1px dotted rgba(255, 255, 255, 0.85);\r\n\r\n        line-height: 1.7;\r\n\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n          color: #3aa5dc;\r\n          border-bottom: 1px solid rgba(255, 255, 255, 0.85);\r\n        }\r\n\r\n        &.multiple {\r\n          border-bottom: none;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        &.multiple:hover {\r\n          color: rgba(255, 255, 255, 0.85);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Spinkit from 'react-spinkit';\r\n\r\nimport { Content, SynonymItem, Loading } from './styles.js';\r\n\r\nfunction SynonymsContent({\r\n  synonyms = [],\r\n  word = '',\r\n  loading = false,\r\n  didFind = true,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function handleSynonymClick(word) {\r\n    let formatedWord = word.replace(/(?:\\.|,)/, '');\r\n\r\n    history.push(`/${formatedWord}`);\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      {loading ? (\r\n        <Loading>\r\n          {loading && <Spinkit name=\"pacman\" color=\"yellow\" fadeIn=\"none\" />}\r\n        </Loading>\r\n      ) : (\r\n        <>\r\n          <h1>\r\n            Sinônimos de <span>{word}</span>\r\n          </h1>\r\n          <ul>\r\n            {synonyms.map((synonymItem) => (\r\n              <SynonymItem key={synonymItem.sort}>\r\n                <h2>{synonymItem.sort}</h2>\r\n                <div>\r\n                  <ul>\r\n                    {synonymItem.synonyms.map((synonym) => (\r\n                      <li key={synonym.name}>\r\n                        <button\r\n                          className={synonym.isMultiple ? 'multiple' : ''}\r\n                          onClick={() =>\r\n                            synonym.isMultiple\r\n                              ? {}\r\n                              : handleSynonymClick(synonym.name)\r\n                          }\r\n                        >\r\n                          {synonym.name}\r\n                        </button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </SynonymItem>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default SynonymsContent;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL:\r\n    'https://cors-anywhere.herokuapp.com/https://sinonimosapi.netlify.com/.netlify/functions/api/',\r\n  method: 'GET',\r\n});\r\n\r\nexport default api;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container } from './styles.js';\r\n\r\nimport SearchBar from '../../components/SearchBar';\r\nimport NotFound from '../../components/NotFound';\r\n\r\nimport SynonymsContent from './components/SynonymsContent';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Home({ match, notFound = false }) {\r\n  const history = useHistory();\r\n  const routeWord = match.params.word;\r\n\r\n  const [synonyms, setSynonyms] = useState([]);\r\n  const [word, setWord] = useState(routeWord);\r\n  const [didFind, setDidFind] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getSynonyms = useCallback(async (word = '') => {\r\n    setLoading(true);\r\n    const { data } = await api({ params: { q: word.trim() } });\r\n\r\n    const synonyms = Object.entries(data).map((synonym) => ({\r\n      sort: synonym[0],\r\n      synonyms: synonym[1].map((word, index, arr) => ({\r\n        name: index === arr.length - 1 ? word.concat('.') : word.concat(','),\r\n        isMultiple: word.includes(' '),\r\n      })),\r\n    }));\r\n\r\n    setSynonyms(synonyms);\r\n    setLoading(false);\r\n    setDidFind(!!synonyms[0]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getSynonyms(routeWord);\r\n    setWord(routeWord);\r\n  }, [routeWord, getSynonyms]);\r\n\r\n  useEffect(() => {}, [synonyms]);\r\n\r\n  useEffect(() => {\r\n    if (!didFind) {\r\n      history.push('/notFound');\r\n    }\r\n  }, [didFind, history]);\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar\r\n        onSearch={getSynonyms}\r\n        onWordChange={() => {}}\r\n        wordProp={word}\r\n      />\r\n\r\n      {notFound ? (\r\n        <NotFound />\r\n      ) : (\r\n        <SynonymsContent\r\n          synonyms={synonyms}\r\n          didFind={didFind}\r\n          word={word}\r\n          loading={loading}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Switch, HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route\r\n          path=\"/notFound\"\r\n          exact\r\n          render={(props) => <Home {...props} notFound />}\r\n        />\r\n\r\n        <Route path=\"/:word\" exact component={Home} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport './styles/global.css';\r\n\r\nimport Routes from './router';\r\n\r\nfunction App() {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}